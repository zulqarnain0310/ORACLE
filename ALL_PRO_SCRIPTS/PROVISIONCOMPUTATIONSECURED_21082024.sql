--------------------------------------------------------
--  DDL for Procedure PROVISIONCOMPUTATIONSECURED_21082024
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" /*=====================================
AUTHER : TRILOKI KHANNA
CREATE DATE : 27-11-2019
MODIFY DATE : 27-11-2019
DESCRIPTION : ProvisionComputationSecured 
EXEC pro.ProvisionComputationSecured  @TIMEKEY=25410 
====================================*/
(
  v_TimeKey IN NUMBER
)
AS

BEGIN

   BEGIN

      BEGIN
         UPDATE tt_ACCOUNTCAL_53
            SET SECUREDAMT = 0,
                PROVSECURED = 0,
                BANKPROVSECURED = 0,
                RBIPROVSECURED = 0;
         MERGE INTO A 
         USING (SELECT A.ROWID row_id, CASE 
         WHEN NVL(B.ASSETCLASSSHORTNAMEENUM, 'STD') = 'LOS' THEN 0
         ELSE NVL(A.USEDRV, 0)
            END AS pos_2, (CASE 
         WHEN NVL(B.ASSETCLASSSHORTNAMEENUM, 'STD') = 'LOS' THEN 0
         ELSE (NVL(A.USEDRV, 0) * CASE 
         WHEN C.PROVISIONNAME = 'Corporate Common' THEN NVL(A.ProvPerSecured, 0)
         ELSE NVL(C.PROVISIONSECURED, 0) / 100
            END)
            END) AS pos_3, (CASE 
         WHEN NVL(B.ASSETCLASSSHORTNAMEENUM, 'STD') = 'LOS' THEN 0
         ELSE (NVL(A.USEDRV, 0) * CASE 
         WHEN C.PROVISIONNAME = 'Corporate Common' THEN NVL(A.ProvPerSecured, 0)
         ELSE NVL(C.PROVISIONSECURED, 0) / 100
            END)
            END) AS pos_4, (CASE 
         WHEN NVL(B.ASSETCLASSSHORTNAMEENUM, 'STD') = 'LOS' THEN 0
         ELSE (NVL(A.USEDRV, 0) * C.RBIPROVISIONSECURED / 100)
            END) AS pos_5
         FROM A ,tt_ACCOUNTCAL_53 A
                JOIN tt_CUSTOMERCAL_54 D   ON A.CUSTOMERENTITYID = D.CUSTOMERENTITYID
                JOIN DIMASSETCLASS B   ON B.EFFECTIVEFROMTIMEKEY <= v_TIMEKEY
                AND B.EFFECTIVETOTIMEKEY >= v_TIMEKEY
                AND NVL(A.FINALASSETCLASSALT_KEY, 1) = B.ASSETCLASSALT_KEY
                JOIN DIMPROVISION_SEG C   ON C.EFFECTIVEFROMTIMEKEY <= v_TIMEKEY
                AND C.EFFECTIVETOTIMEKEY >= v_TIMEKEY
                AND NVL(A.PROVISIONALT_KEY, 1) = C.PROVISIONALT_KEY 
          WHERE NVL(D.FLGPROCESSING, 'N') = 'N'
           AND A.BALANCE > 0
           AND FINALASSETCLASSALT_KEY > 1) src
         ON ( A.ROWID = src.row_id )
         WHEN MATCHED THEN UPDATE SET A.SECUREDAMT
                                      --, PROVSECURED =(CASE WHEN ISNULL(B.ASSETCLASSSHORTNAMEENUM,'STD')='LOS' 
                                       --	                    THEN 0
                                       --			    ELSE ROUND(ISNULL(A.USEDRV,0) * CASE WHEN C.PROVISIONNAME='Corporate Common' THEN ISNULL(A.ProvPerSecured,0) ELSE ISNULL(C.PROVISIONSECURED,0)/100 END,0)  
                                       --				 END)
                                       = pos_2,
                                      A.PROVSECURED
                                      --, BANKPROVSECURED =(CASE WHEN ISNULL(B.ASSETCLASSSHORTNAMEENUM,'STD')='LOS' 
                                       --		                    THEN 0
                                       --				    ELSE ROUND(ISNULL(A.USEDRV,0) * CASE WHEN C.PROVISIONNAME='Corporate Common' THEN ISNULL(A.ProvPerSecured,0) ELSE ISNULL(C.PROVISIONSECURED,0)/100 END  ,0)
                                       --		            END)
                                       = pos_3,
                                      A.BANKPROVSECURED
                                      --, RBIPROVSECURED =(CASE WHEN ISNULL(B.ASSETCLASSSHORTNAMEENUM,'STD')='LOS' 
                                       --			                    THEN 0
                                       --					    ELSE ROUND(ISNULL(A.USEDRV,0) * C.RBIPROVISIONSECURED  ,0/100)
                                       --			            END)
                                       = pos_4,
                                      A.RBIPROVSECURED = pos_5;
         MERGE INTO A 
         USING (SELECT A.ROWID row_id, CASE 
         WHEN NVL(B.ASSETCLASSSHORTNAMEENUM, 'STD') = 'LOS' THEN 0
         ELSE NVL(A.USEDRV, 0)
            END AS pos_2, (CASE 
         WHEN NVL(B.ASSETCLASSSHORTNAMEENUM, 'STD') = 'LOS' THEN 0
         ELSE (NVL(A.USEDRV, 0) * CASE 
         WHEN C.PROVISIONNAME = 'Corporate Common' THEN NVL(A.ProvPerSecured, 0)
         ELSE NVL(C.PROVISIONSECURED, 0) / 100
            END)
            END) AS pos_3, (CASE 
         WHEN NVL(B.ASSETCLASSSHORTNAMEENUM, 'STD') = 'LOS' THEN 0
         ELSE (NVL(A.USEDRV, 0) * CASE 
         WHEN C.PROVISIONNAME = 'Corporate Common' THEN NVL(A.ProvPerSecured, 0)
         ELSE NVL(C.PROVISIONSECURED, 0) / 100
            END)
            END) AS pos_4, (CASE 
         WHEN NVL(B.ASSETCLASSSHORTNAMEENUM, 'STD') = 'LOS' THEN 0
         ELSE (NVL(A.USEDRV, 0) * C.RBIPROVISIONSECURED / 100)
            END) AS pos_5
         FROM A ,tt_ACCOUNTCAL_53 A
                JOIN tt_CUSTOMERCAL_54 D   ON A.CUSTOMERENTITYID = D.CUSTOMERENTITYID
                JOIN DIMASSETCLASS B   ON B.EFFECTIVEFROMTIMEKEY <= v_TIMEKEY
                AND B.EFFECTIVETOTIMEKEY >= v_TIMEKEY
                AND NVL(A.FINALASSETCLASSALT_KEY, 1) = B.ASSETCLASSALT_KEY
                JOIN DimProvision_SegStd C   ON C.EFFECTIVEFROMTIMEKEY <= v_TIMEKEY
                AND C.EFFECTIVETOTIMEKEY >= v_TIMEKEY
                AND NVL(A.PROVISIONALT_KEY, 13) = C.PROVISIONALT_KEY 
          WHERE NVL(D.FLGPROCESSING, 'N') = 'N'
           AND A.BALANCE > 0
           AND FinalAssetClassAlt_Key = 1) src
         ON ( A.ROWID = src.row_id )
         WHEN MATCHED THEN UPDATE SET A.SECUREDAMT
                                      --, PROVSECURED =(CASE WHEN ISNULL(B.ASSETCLASSSHORTNAMEENUM,'STD')='LOS' 
                                       --	                    THEN 0
                                       --			    ELSE ROUND(ISNULL(A.USEDRV,0) * CASE WHEN C.PROVISIONNAME='Corporate Common' THEN ISNULL(A.ProvPerSecured,0) ELSE ISNULL(C.PROVISIONSECURED,0)/100 END,0)  
                                       --				 END)
                                       = pos_2,
                                      A.PROVSECURED
                                      --, BANKPROVSECURED =(CASE WHEN ISNULL(B.ASSETCLASSSHORTNAMEENUM,'STD')='LOS' 
                                       --		                    THEN 0
                                       --				    ELSE ROUND(ISNULL(A.USEDRV,0) * CASE WHEN C.PROVISIONNAME='Corporate Common' THEN ISNULL(A.ProvPerSecured,0) ELSE ISNULL(C.PROVISIONSECURED,0)/100 END  ,0)
                                       --		            END)
                                       = pos_3,
                                      A.BANKPROVSECURED
                                      --, RBIPROVSECURED =(CASE WHEN ISNULL(B.ASSETCLASSSHORTNAMEENUM,'STD')='LOS' 
                                       --			                    THEN 0
                                       --					    ELSE ROUND(ISNULL(A.USEDRV,0) * C.RBIPROVISIONSECURED  ,0/100)
                                       --			            END)
                                       = pos_4,
                                      A.RBIPROVSECURED = pos_5;
         UPDATE tt_ACCOUNTCAL_53
            SET SECUREDAMT = 0
          WHERE  NVL(SECUREDAMT, 0) <= 0;
         UPDATE tt_ACCOUNTCAL_53
            SET PROVSECURED = 0
          WHERE  NVL(PROVSECURED, 0) <= 0;
         UPDATE tt_ACCOUNTCAL_53
            SET BANKPROVSECURED = 0
          WHERE  NVL(BANKPROVSECURED, 0) <= 0;
         UPDATE tt_ACCOUNTCAL_53
            SET RBIPROVSECURED = 0
          WHERE  NVL(RBIPROVSECURED, 0) <= 0;
         UPDATE PRO_RBL_MISDB_PROD.AclRunningProcessStatus
            SET COMPLETED = 'Y',
                ERRORDATE = NULL,
                ERRORDESCRIPTION = NULL,
                COUNT = NVL(COUNT, 0) + 1
          WHERE  RUNNINGPROCESSNAME = 'ProvisionComputationSecured';

      END;
   EXCEPTION
      WHEN OTHERS THEN

   BEGIN
      -----------------Added for DashBoard 04-03-2021
      --Update BANDAUDITSTATUS set CompletedCount=CompletedCount+1 where BandName='ASSET CLASSIFICATION'
      UPDATE PRO_RBL_MISDB_PROD.AclRunningProcessStatus
         SET COMPLETED = 'N',
             ERRORDATE = SYSDATE,
             ERRORDESCRIPTION = SQLERRM,
             COUNT = NVL(COUNT, 0) + 1
       WHERE  RUNNINGPROCESSNAME = 'ProvisionComputationSecured';

   END;END;

EXCEPTION WHEN OTHERS THEN utils.handleerror(SQLCODE,SQLERRM);
END;

/

  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "ROLE_LOCAL_RBL_MISDB_PROD_ORACLE";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "PREMOC_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "QPI_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "ALERT_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "DWH_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "D2KMNTR_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "CURDAT_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "BS_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "ACL_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "ETL_MAIN_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "DATAUPLOAD_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "ROLE_LOCAL_RBL_MISDB_PROD_ORACLE";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "PREMOC_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "QPI_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "ALERT_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "DWH_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "D2KMNTR_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "CURDAT_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "BS_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "ACL_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "ETL_MAIN_RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "RBL_MISDB_PROD";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "DATAUPLOAD_RBL_MISDB_PROD";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "ROLE_ALL_DB";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "CC_CDR_RBL_STGDB";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "RBL_BI_RBL_STGDB";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "BSG_READ_RBL_STGDB";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "STD_FIN_RBL_STGDB";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "RBL_STGDB";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "ETL_TEMP_RBL_TEMPDB";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "RBL_TEMPDB";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "STG_FIN_RBL_STGDB";
  GRANT EXECUTE ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "ADF_CDR_RBL_STGDB";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "ROLE_ALL_DB";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "CC_CDR_RBL_STGDB";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "RBL_BI_RBL_STGDB";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "BSG_READ_RBL_STGDB";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "STD_FIN_RBL_STGDB";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "RBL_STGDB";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "ETL_TEMP_RBL_TEMPDB";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "RBL_TEMPDB";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "STG_FIN_RBL_STGDB";
  GRANT DEBUG ON "MAIN_PRO"."PROVISIONCOMPUTATIONSECURED_21082024" TO "ADF_CDR_RBL_STGDB";
